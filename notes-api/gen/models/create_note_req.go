// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateNoteReq create note req
// swagger:model CreateNoteReq
type CreateNoteReq struct {

	// importance
	// Enum: [LOW MEDIUM HIGH]
	Importance string `json:"importance,omitempty"`

	// message
	Message *string `json:"message,omitempty"`

	// user ID
	UserID int64 `json:"userID,omitempty"`
}

// Validate validates this create note req
func (m *CreateNoteReq) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateImportance(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var createNoteReqTypeImportancePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["LOW","MEDIUM","HIGH"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createNoteReqTypeImportancePropEnum = append(createNoteReqTypeImportancePropEnum, v)
	}
}

const (

	// CreateNoteReqImportanceLOW captures enum value "LOW"
	CreateNoteReqImportanceLOW string = "LOW"

	// CreateNoteReqImportanceMEDIUM captures enum value "MEDIUM"
	CreateNoteReqImportanceMEDIUM string = "MEDIUM"

	// CreateNoteReqImportanceHIGH captures enum value "HIGH"
	CreateNoteReqImportanceHIGH string = "HIGH"
)

// prop value enum
func (m *CreateNoteReq) validateImportanceEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, createNoteReqTypeImportancePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CreateNoteReq) validateImportance(formats strfmt.Registry) error {

	if swag.IsZero(m.Importance) { // not required
		return nil
	}

	// value enum
	if err := m.validateImportanceEnum("importance", "body", m.Importance); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateNoteReq) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateNoteReq) UnmarshalBinary(b []byte) error {
	var res CreateNoteReq
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
