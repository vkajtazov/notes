// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is a Notes API",
    "title": "Notes API",
    "contact": {
      "email": "support@notes.com"
    },
    "version": "1.1.0"
  },
  "basePath": "/",
  "paths": {
    "/note": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=utf-8"
        ],
        "tags": [
          "notes"
        ],
        "summary": "Create note",
        "operationId": "createNote",
        "parameters": [
          {
            "description": "Note object to create",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateNoteReq"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "405": {
            "description": "Not allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/note/{id}": {
      "get": {
        "produces": [
          "application/json; charset=utf-8"
        ],
        "tags": [
          "notes"
        ],
        "summary": "Get note by id",
        "operationId": "getNoteById",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of note",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Note"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "CreateNoteReq": {
      "type": "object",
      "properties": {
        "importance": {
          "type": "string",
          "enum": [
            "LOW",
            "MEDIUM",
            "HIGH"
          ]
        },
        "message": {
          "type": "string",
          "x-nullable": true
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Note": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "importance": {
          "type": "string",
          "enum": [
            "LOW",
            "MEDIUM",
            "HIGH"
          ]
        },
        "message": {
          "type": "string",
          "x-nullable": true
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "UpdateNoteReq": {
      "type": "object",
      "properties": {
        "importance": {
          "type": "string",
          "enum": [
            "LOW",
            "MEDIUM",
            "HIGH"
          ]
        },
        "message": {
          "type": "string",
          "x-nullable": true
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is a Notes API",
    "title": "Notes API",
    "contact": {
      "email": "support@notes.com"
    },
    "version": "1.1.0"
  },
  "basePath": "/",
  "paths": {
    "/note": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; charset=utf-8"
        ],
        "tags": [
          "notes"
        ],
        "summary": "Create note",
        "operationId": "createNote",
        "parameters": [
          {
            "description": "Note object to create",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateNoteReq"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "405": {
            "description": "Not allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/note/{id}": {
      "get": {
        "produces": [
          "application/json; charset=utf-8"
        ],
        "tags": [
          "notes"
        ],
        "summary": "Get note by id",
        "operationId": "getNoteById",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of note",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Note"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "CreateNoteReq": {
      "type": "object",
      "properties": {
        "importance": {
          "type": "string",
          "enum": [
            "LOW",
            "MEDIUM",
            "HIGH"
          ]
        },
        "message": {
          "type": "string",
          "x-nullable": true
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Note": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "importance": {
          "type": "string",
          "enum": [
            "LOW",
            "MEDIUM",
            "HIGH"
          ]
        },
        "message": {
          "type": "string",
          "x-nullable": true
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "UpdateNoteReq": {
      "type": "object",
      "properties": {
        "importance": {
          "type": "string",
          "enum": [
            "LOW",
            "MEDIUM",
            "HIGH"
          ]
        },
        "message": {
          "type": "string",
          "x-nullable": true
        }
      }
    }
  }
}`))
}
